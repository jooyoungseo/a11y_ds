[
  {
    "objectID": "installation_r_vscode.html",
    "href": "installation_r_vscode.html",
    "title": "Session 1: Installation Guide for R and Visual Studio Code for Screen Reader Users",
    "section": "",
    "text": "this section describes how to install R, Visual Studio Code, and other related dependencies. The following instructions are tested on Windows 10 and Mac OS.\n\n\n\nPress Windows+R and type “cmd” without the quotes. After typing, don’t hit Enter. Instead, press Ctrl+Shift+Enter to run the command prompt as administrator privilege. If you are prompted for an administrator password or confirmation, type the password or provide confirmation.\nCopy and paste the following command into the command prompt and press enter. This will install chocolatey, a package manager for Windows. Note that there is copy button below the command. You can click the copy button to copy the command. To paste the command into the command prompt, you can press Ctrl+V.\n\n\n@\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \"[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\" && SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"\n\n\nCopy and paste the following command into the opened command prompt and press enter. This will install R, VSCode and other related dependencies. Grab a cup of coffee and wait for the installation to finish. It may take a while. You will hear a “do mi sol” beep sound when the installation is completed. If it fails to install, you will hear a “do do do” beep sound. If you hear the “do do do” beep sound, you can try to run the command again.\n\n\npowershell -Command \"& { $sapi = New-Object -ComObject SAPI.SpVoice; $sapi.Rate = 10; $packages = @('tinytex', 'pandoc', 'quarto', 'rtools', 'r.project', 'vscode'); $executables = @('tlmgr', 'pandoc', 'quarto', '', 'R', 'code'); $installPackages = @(); $installedPackages = @(); foreach ($package in $packages) { $index = $packages.IndexOf($package); if ($package -eq 'rtools') { if ([Environment]::GetEnvironmentVariable('RTOOLS43_HOME', 'User') -eq $null -and [Environment]::GetEnvironmentVariable('RTOOLS43_HOME', 'Machine') -eq $null) { $installPackages += $package } else { $installedPackages += $package } } else { if ((Get-Command $executables[$index] -ErrorAction SilentlyContinue) -eq $null) { $installPackages += $package } else { $installedPackages += $package } } }; if ($installedPackages.Count -gt 0) { [console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(329, 100); Start-Sleep -Milliseconds 100; [console]::beep(392, 100); $sapi.Speak('The following packages are already installed: ' + ($installedPackages -join ', ')) }; if ($installPackages.Count -gt 0) { [console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(329, 100); Start-Sleep -Milliseconds 100; [console]::beep(392, 100); $sapi.Speak('The following packages will be installed: ' + ($installPackages -join ', ')); choco install $installPackages -y }; if($installedPackages.Count -eq 0 -and $installPackages.Count -eq 0) {[console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(329, 100); Start-Sleep -Milliseconds 100; [console]::beep(392, 100); $sapi.Speak('All packages are already installed.')} }\"\n\n\nAfter installation, type the following in the opened command prompt and hit enter key. This will add R to your path environment variable. You will hear a “do mi sol” beep sound when the installation is completed. If it fails to install, you will hear a “do do do” beep sound. If you hear the “do do do” beep sound, you can try to run the command again.\n\n\npowershell -Command \"& { $sapi = New-Object -ComObject SAPI.SpVoice; $sapi.Rate = 10; try { $RInstalls = Get-ChildItem 'C:\\Program Files\\R' -Directory; $LatestR = $RInstalls | Sort-Object LastWriteTime -Descending | Select-Object -First 1; $RBinPath = Join-Path -Path $LatestR.FullName -ChildPath 'bin\\x64'; $RSetRegPath = Join-Path -Path $LatestR.FullName -ChildPath 'bin\\x64\\RSetReg.exe'; & $RSetRegPath; $UserPath = [Environment]::GetEnvironmentVariable('Path', [System.EnvironmentVariableTarget]::User); $SystemPath = [Environment]::GetEnvironmentVariable('Path', [System.EnvironmentVariableTarget]::Machine); if (($UserPath -split ';' -notcontains $RBinPath) -and ($SystemPath -split ';' -notcontains $RBinPath)) { $NewPath = $UserPath + ';' + $RBinPath; [Environment]::SetEnvironmentVariable('Path', $NewPath, [System.EnvironmentVariableTarget]::User) }; [console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(329, 100); Start-Sleep -Milliseconds 100; [console]::beep(392, 100); $sapi.Speak('Process Completed Successfully') } catch { [console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(261, 100); $sapi.Speak('An Error Occurred During Execution') }}\"\n\n\nClose the command prompt by pressing Alt+F4 key.\nPress Windows+R and type “cmd” without the quotes. After typing, don’t hit Enter. Instead, press Ctrl+Shift+Enter to run the command prompt as administrator privilege. If you are prompted for an administrator password or confirmation, type the password or provide confirmation.\nIn the opened command prompt, copy and paste the following command and press enter. This will install R packages that are required for VSCode.\n\n\n@refreshenv && Rscript -e \"packages &lt;- c('languageserver', 'lintr', 'httpgd', 'DT', 'beepr', 'devtools'); installed_packages &lt;- rownames(installed.packages()); packages_to_install &lt;- setdiff(packages, installed_packages); if(length(packages_to_install) &gt; 0) { install.packages(packages_to_install, repos = 'https://cloud.r-project.org/') }; if(!'vscDebugger' %in% installed_packages) { if(!require(remotes)) { install.packages('remotes', repos = 'https://cloud.r-project.org/') }; remotes::install_github('ManuelHentschel/vscDebugger') }\"\n\n\nThe following is optional. However, I recommend you to install the latest version of PowerShell to benefit from VSCode shell integration feature. You can copy and paste the following command into the opened command prompt and press enter. Note that the default PowerShell version on Windows 10 is 5.1. The following command will install PowerShell 7 or above.\n\n\nwinget install Microsoft.PowerShell\n\n\nGo to Section 2, to complete the remaining steps.\n\n\n\n\nThe following assumes that you have installed Homebrew on your system. If you haven’t installed Homebrew, you can install it by following the instruction described in the Homebrew website.\n\nOpen terminal by pressing Command+Space and type “terminal” without the quotes. Press enter to open the terminal.\nCopy and paste the following command into the terminal and press enter. Note that there is copy button below the command. You can click the copy button to copy the command. To paste the command into the command prompt, you can press CMD+V. Some commands may require you to enter your password. If so, you will be prompted to enter your password. You will not see any characters when you type your password. Just type your password and press enter.\n\n\n#  Install R\nbrew install r\n\n# Install Pandoc\nbrew install pandoc\n\n# Install Quarto\nbrew install quarto\n\n# Install VSCode\nbrew install --cask visual-studio-code\n\n# Install xcode command line tools\nxcode-select --install\n\n# Install TinyTeX\nquarto install tinytex\n\n\nIn the terminal, copy and paste the following command and press enter. This will install R packages that are required for VSCode.\n\n\nRscript -e 'packages &lt;- c(\"languageserver\", \"lintr\", \"httpgd\", \"DT\", \"beepr\", \"devtools\"); installed_packages &lt;- rownames(installed.packages()); packages_to_install &lt;- setdiff(packages, installed_packages); if(length(packages_to_install) &gt; 0) { install.packages(packages_to_install, repos = \"https://cloud.r-project.org/\") }; if(!\"vscDebugger\" %in% installed_packages) { if(!require(remotes)) { install.packages(\"remotes\", repos = \"https://cloud.r-project.org/\") }; remotes::install_github(\"ManuelHentschel/vscDebugger\") }'\n\n\nGo to Section 2, to complete the remaining steps."
  },
  {
    "objectID": "installation_r_vscode.html#windows",
    "href": "installation_r_vscode.html#windows",
    "title": "Session 1: Installation Guide for R and Visual Studio Code for Screen Reader Users",
    "section": "",
    "text": "Press Windows+R and type “cmd” without the quotes. After typing, don’t hit Enter. Instead, press Ctrl+Shift+Enter to run the command prompt as administrator privilege. If you are prompted for an administrator password or confirmation, type the password or provide confirmation.\nCopy and paste the following command into the command prompt and press enter. This will install chocolatey, a package manager for Windows. Note that there is copy button below the command. You can click the copy button to copy the command. To paste the command into the command prompt, you can press Ctrl+V.\n\n\n@\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \"[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\" && SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"\n\n\nCopy and paste the following command into the opened command prompt and press enter. This will install R, VSCode and other related dependencies. Grab a cup of coffee and wait for the installation to finish. It may take a while. You will hear a “do mi sol” beep sound when the installation is completed. If it fails to install, you will hear a “do do do” beep sound. If you hear the “do do do” beep sound, you can try to run the command again.\n\n\npowershell -Command \"& { $sapi = New-Object -ComObject SAPI.SpVoice; $sapi.Rate = 10; $packages = @('tinytex', 'pandoc', 'quarto', 'rtools', 'r.project', 'vscode'); $executables = @('tlmgr', 'pandoc', 'quarto', '', 'R', 'code'); $installPackages = @(); $installedPackages = @(); foreach ($package in $packages) { $index = $packages.IndexOf($package); if ($package -eq 'rtools') { if ([Environment]::GetEnvironmentVariable('RTOOLS43_HOME', 'User') -eq $null -and [Environment]::GetEnvironmentVariable('RTOOLS43_HOME', 'Machine') -eq $null) { $installPackages += $package } else { $installedPackages += $package } } else { if ((Get-Command $executables[$index] -ErrorAction SilentlyContinue) -eq $null) { $installPackages += $package } else { $installedPackages += $package } } }; if ($installedPackages.Count -gt 0) { [console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(329, 100); Start-Sleep -Milliseconds 100; [console]::beep(392, 100); $sapi.Speak('The following packages are already installed: ' + ($installedPackages -join ', ')) }; if ($installPackages.Count -gt 0) { [console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(329, 100); Start-Sleep -Milliseconds 100; [console]::beep(392, 100); $sapi.Speak('The following packages will be installed: ' + ($installPackages -join ', ')); choco install $installPackages -y }; if($installedPackages.Count -eq 0 -and $installPackages.Count -eq 0) {[console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(329, 100); Start-Sleep -Milliseconds 100; [console]::beep(392, 100); $sapi.Speak('All packages are already installed.')} }\"\n\n\nAfter installation, type the following in the opened command prompt and hit enter key. This will add R to your path environment variable. You will hear a “do mi sol” beep sound when the installation is completed. If it fails to install, you will hear a “do do do” beep sound. If you hear the “do do do” beep sound, you can try to run the command again.\n\n\npowershell -Command \"& { $sapi = New-Object -ComObject SAPI.SpVoice; $sapi.Rate = 10; try { $RInstalls = Get-ChildItem 'C:\\Program Files\\R' -Directory; $LatestR = $RInstalls | Sort-Object LastWriteTime -Descending | Select-Object -First 1; $RBinPath = Join-Path -Path $LatestR.FullName -ChildPath 'bin\\x64'; $RSetRegPath = Join-Path -Path $LatestR.FullName -ChildPath 'bin\\x64\\RSetReg.exe'; & $RSetRegPath; $UserPath = [Environment]::GetEnvironmentVariable('Path', [System.EnvironmentVariableTarget]::User); $SystemPath = [Environment]::GetEnvironmentVariable('Path', [System.EnvironmentVariableTarget]::Machine); if (($UserPath -split ';' -notcontains $RBinPath) -and ($SystemPath -split ';' -notcontains $RBinPath)) { $NewPath = $UserPath + ';' + $RBinPath; [Environment]::SetEnvironmentVariable('Path', $NewPath, [System.EnvironmentVariableTarget]::User) }; [console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(329, 100); Start-Sleep -Milliseconds 100; [console]::beep(392, 100); $sapi.Speak('Process Completed Successfully') } catch { [console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(261, 100); Start-Sleep -Milliseconds 100; [console]::beep(261, 100); $sapi.Speak('An Error Occurred During Execution') }}\"\n\n\nClose the command prompt by pressing Alt+F4 key.\nPress Windows+R and type “cmd” without the quotes. After typing, don’t hit Enter. Instead, press Ctrl+Shift+Enter to run the command prompt as administrator privilege. If you are prompted for an administrator password or confirmation, type the password or provide confirmation.\nIn the opened command prompt, copy and paste the following command and press enter. This will install R packages that are required for VSCode.\n\n\n@refreshenv && Rscript -e \"packages &lt;- c('languageserver', 'lintr', 'httpgd', 'DT', 'beepr', 'devtools'); installed_packages &lt;- rownames(installed.packages()); packages_to_install &lt;- setdiff(packages, installed_packages); if(length(packages_to_install) &gt; 0) { install.packages(packages_to_install, repos = 'https://cloud.r-project.org/') }; if(!'vscDebugger' %in% installed_packages) { if(!require(remotes)) { install.packages('remotes', repos = 'https://cloud.r-project.org/') }; remotes::install_github('ManuelHentschel/vscDebugger') }\"\n\n\nThe following is optional. However, I recommend you to install the latest version of PowerShell to benefit from VSCode shell integration feature. You can copy and paste the following command into the opened command prompt and press enter. Note that the default PowerShell version on Windows 10 is 5.1. The following command will install PowerShell 7 or above.\n\n\nwinget install Microsoft.PowerShell\n\n\nGo to Section 2, to complete the remaining steps."
  },
  {
    "objectID": "installation_r_vscode.html#mac-os",
    "href": "installation_r_vscode.html#mac-os",
    "title": "Session 1: Installation Guide for R and Visual Studio Code for Screen Reader Users",
    "section": "",
    "text": "The following assumes that you have installed Homebrew on your system. If you haven’t installed Homebrew, you can install it by following the instruction described in the Homebrew website.\n\nOpen terminal by pressing Command+Space and type “terminal” without the quotes. Press enter to open the terminal.\nCopy and paste the following command into the terminal and press enter. Note that there is copy button below the command. You can click the copy button to copy the command. To paste the command into the command prompt, you can press CMD+V. Some commands may require you to enter your password. If so, you will be prompted to enter your password. You will not see any characters when you type your password. Just type your password and press enter.\n\n\n#  Install R\nbrew install r\n\n# Install Pandoc\nbrew install pandoc\n\n# Install Quarto\nbrew install quarto\n\n# Install VSCode\nbrew install --cask visual-studio-code\n\n# Install xcode command line tools\nxcode-select --install\n\n# Install TinyTeX\nquarto install tinytex\n\n\nIn the terminal, copy and paste the following command and press enter. This will install R packages that are required for VSCode.\n\n\nRscript -e 'packages &lt;- c(\"languageserver\", \"lintr\", \"httpgd\", \"DT\", \"beepr\", \"devtools\"); installed_packages &lt;- rownames(installed.packages()); packages_to_install &lt;- setdiff(packages, installed_packages); if(length(packages_to_install) &gt; 0) { install.packages(packages_to_install, repos = \"https://cloud.r-project.org/\") }; if(!\"vscDebugger\" %in% installed_packages) { if(!require(remotes)) { install.packages(\"remotes\", repos = \"https://cloud.r-project.org/\") }; remotes::install_github(\"ManuelHentschel/vscDebugger\") }'\n\n\nGo to Section 2, to complete the remaining steps."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Accessible data science is a project to make data science more accessible to everyone. We do this by creating a community of people who are interested in data science and by creating resources that help people learn data science."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "a11y_ds",
    "section": "",
    "text": "This website is a collection of resources for learning about accessible data science. It is a work in progress, and contributions are welcome!"
  }
]